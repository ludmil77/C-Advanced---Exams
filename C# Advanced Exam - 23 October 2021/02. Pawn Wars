using System;
using System.Collections.Generic;
using System.Numerics;
using System.Linq;
using System.Text;

namespace _02._Pawn_Wars
{
    public class StartUp
    {
        static void Main(string[] args)
        {
            int side = 8;
            char[,] chessBoard = new char[side, side];

            int whiteRow = 0;
            int whiteCol = 0;
            int blackRow = 0;
            int blackCol = 0;

            for (int row = 0; row < side; row++)
            {

                string rowElements = Console.ReadLine();

                for (int col = 0; col < side; col++)
                {
                    chessBoard[row, col] = rowElements[col];

                    if (rowElements[col] == 'w')
                    {
                        whiteRow = row;
                        whiteCol = col;
                    }

                    if (rowElements[col] == 'b')
                    {
                        blackRow = row;
                        blackCol = col;
                    }
                }
            }
            for (int i = 0; i < 2*side; i++)
            {
                
                if (i % 2 == 0)
                {
                    if (whiteRow == 0)
                    {
                        Console.WriteLine($"Game over! White pawn is promoted to a queen at {(char)(97 + whiteCol)}8.");

                        return;
                    }
                    if (whiteRow == blackRow + 1 
                        && whiteCol == blackCol + 1)
                    {
                        Console.WriteLine($"Game over! White capture on " +
                            $"{(char)(97 + whiteCol - 1)}{8 - whiteRow + 1}.");
                        return;
                    }

                    if (whiteRow == blackRow + 1
                        && whiteCol == blackCol - 1)
                    {
                        Console.WriteLine($"Game over! White capture on " +
                            $"{(char)(97 + whiteCol + 1)}{8 - whiteRow + 1}.");
                        return;
                    }
                    if (IsValidCell(whiteCol, whiteRow - 1, chessBoard))
                    {
                        whiteRow--;
                        chessBoard[whiteRow, whiteCol] = 'w';
                    }
                }
                else
                {
                    if (blackRow == 7)
                    {
                        Console.WriteLine($"Game over! Black pawn is promoted to a queen at {(char)(97 + blackCol)}1.");

                        return;
                    }
                    if (blackRow == whiteRow - 1
                        && blackCol == whiteCol - 1)
                    {
                        Console.WriteLine($"Game over! Black capture on " +
                            $"{(char)(97 + blackCol + 1)}{8 - blackRow - 1}.");
                        return;
                    }
                    if (blackRow == whiteRow - 1
                       && blackCol == whiteCol + 1)
                    {
                        Console.WriteLine($"Game over! Black capture on " +
                            $"{(char)(97 + blackCol - 1)}{8 - blackRow - 1}.");
                        return;
                    }
                    if (IsValidCell(blackCol, blackRow + 1, chessBoard))
                    {
                        blackRow++;
                        chessBoard[blackRow, blackCol] = 'w';
                    }
                }
            }
        }
        static bool IsValidCell(int row, int col, char[,] matrix)
        {
            return row >= 0
                && row < matrix.GetLength(0)
                && col >= 0
                && col < matrix.GetLength(1);
        }
    }
}
